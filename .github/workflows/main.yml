name: generate-builds
on:
  push:
    branches:
      - develop

jobs:
  generate-2ship-otr:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.13
      with:
        key: ${{ runner.os }}-otr-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-otr-ccache-${{ github.ref }}
          ${{ runner.os }}-otr-ccache-
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y $(cat .github/workflows/apt-deps.txt) libzip-dev zipcmp zipmerge ziptool
    - name: Cache build folders
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-otr-build-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-otr-build-${{ github.ref }}
          ${{ runner.os }}-otr-build-
        path: |
          build-cmake
          SDL2-2.28.5
          tinyxml2-10.0.0
    - name: Install latest SDL
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        if [ ! -d "SDL2-2.28.5" ]; then
          wget https://github.com/libsdl-org/SDL/releases/download/release-2.28.5/SDL2-2.28.5.tar.gz
          tar -xzf SDL2-2.28.5.tar.gz
        fi
        cd SDL2-2.28.5
        ./configure --enable-hidapi-libusb
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Install latest tinyxml2
      run: |
        sudo apt-get remove libtinyxml2-dev
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        if [ ! -d "tinyxml2-10.0.0" ]; then
          wget https://github.com/leethomason/tinyxml2/archive/refs/tags/10.0.0.tar.gz
          tar -xzf 10.0.0.tar.gz
        fi
        cd tinyxml2-10.0.0
        mkdir -p build
        cd build
        cmake ..
        make
        sudo make install
    - name: Generate 2ship.o2r
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cmake --no-warn-unused-cli -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE:STRING=Release
        cmake --build build-cmake --config Release --target Generate2ShipOtr -j3
    - uses: actions/upload-artifact@v4
      with:
        name: 2ship.o2r
        path: 2ship.o2r
        retention-days: 1

  build-wiiu:
    needs: generate-2ship-otr
    runs-on: ubuntu-22.04
    container:
      image: devkitpro/devkitppc:20240609
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get install -y ninja-build
        sudo apt-get install -y vcpkg
        sudo apt-get remove -y cmake
        wget https://github.com/Kitware/CMake/releases/download/v3.28.3/cmake-3.28.3-linux-x86_64.sh -O /tmp/cmake.sh
        sudo sh /tmp/cmake.sh --prefix=/usr/local/ --exclude-subdir
        mkdir wut
        cd wut
        git init .
        git remote add origin https://github.com/devkitPro/wut.git
        git fetch --depth 1 origin f17054e3e86222c14a1094639558d34b690636ed
        git checkout FETCH_HEAD
        make -j$(nproc)
        make install
        cd ..

    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.13
      with:
        key: wiiu-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          wiiu-ccache-${{ github.ref }}
          wiiu-ccache-
    - name: Build 2Ship
      run: |
        cmake -H. -Bbuild-wiiu -GNinja -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/WiiU.cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        cmake --build build-wiiu --target 2ship_wuhb --config Release -j3

        mv build-wiiu/mm/*.rpx 2ship.rpx
        mv build-wiiu/mm/*.wuhb 2ship.wuhb
        mv README.md readme.txt
      env:
        DEVKITPRO: /opt/devkitpro
        DEVKITPPC: /opt/devkitpro/devkitPPC
    - name: Download 2ship.o2r
      uses: actions/download-artifact@v4
      with:
        name: 2ship.o2r
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: 2ship-wiiu
        path: |
          2ship.rpx
          2ship.wuhb
          2ship.o2r
          readme.txt
  
  build-switch:
    needs: generate-2ship-otr
    runs-on: ubuntu-22.04
    container:
      image: devkitpro/devkita64:20240120
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get install -y ninja-build
        sudo apt install -y libspdlog-dev
        sudo apt-get remove -y cmake
        wget https://github.com/Kitware/CMake/releases/download/v3.28.3/cmake-3.28.3-linux-x86_64.sh -O /tmp/cmake.sh
        sudo sh /tmp/cmake.sh --prefix=/usr/local/ --exclude-subdir

        wget https://libzip.org/download/libzip-1.10.1.tar.gz
        tar -xzvf libzip-1.10.1.tar.gz
        cd libzip-1.10.1
        mkdir build
        cd build
        cmake -H.. -B. -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake
        make
        make install
        cd ../..

        wget https://github.com/gabime/spdlog/archive/refs/tags/v1.11.0.tar.gz
        tar -xzvf v1.11.0.tar.gz
        cd spdlog-1.11.0
        mkdir build
        cd build
        cmake -H.. -B. -DSPDLOG_BUILD_EXAMPLES=OFF -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake
        make
        sudo make install
        cd ../..

        wget https://github.com/nlohmann/json/archive/refs/tags/v3.11.3.tar.gz
        tar -xzvf v3.11.3.tar.gz
        cd json-3.11.3
        mkdir build
        cd build
        cmake -H.. -B. -DJSON_BuildTests=OFF -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake
        make
        make install
        cd ../..

    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.13
      with:
        key: switch-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          switch-ccache-${{ github.ref }}
          switch-ccache-
    - name: Build 2Ship
      run: |
        cmake -H. -Bbuild-switch -GNinja -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        cmake --build build-switch --target 2ship_nro --config Release -j3

        mv build-switch/mm/*.nro 2ship.nro
        mv README.md readme.txt
      env:
        DEVKITPRO: /opt/devkitpro
        DEVKITARM: /opt/devkitpro/devkitA64
    - name: Download 2ship.o2r
      uses: actions/download-artifact@v4
      with:
        name: 2ship.o2r
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: 2ship-switch
        path: |
          2ship.nro
          2ship.o2r
          readme.txt
